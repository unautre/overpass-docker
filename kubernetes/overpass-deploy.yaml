---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: overpass
  labels:
    app: overpass
spec:
  replicas: 1
  selector:
    matchLabels:
      app: overpass
  template:
    metadata:
      labels:
        app: overpass
    spec:
      containers:
      - name: dispatcher
        imagePullPolicy: Always
        image: unautre/osm3s:latest
        volumeMounts:
          - name: db-dir
            mountPath: /opt/osm/db
        command: ["/opt/osm3s/bin/dispatcher", "--osm-base", "--db-dir=/opt/osm/db"]
      - name: webserver
        image: unautre/osm3s:latest
        imagePullPolicy: Always
        volumeMounts:
          - name: db-dir
            mountPath: /opt/osm/db
        ports:
          - containerPort: 8000
            protocol: TCP
      volumes:
        - name: db-dir
          persistentVolumeClaim:
            claimName: osm3s-dbdir
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: osm3s-dbdir
spec:
  storageClassName: manual
  resources:
    requests:
      storage: 250Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
---
apiVersion: v1
kind: Service
metadata:
  name: overpass-service
spec:
  selector:
    app: overpass
  ports:
  - port: 8000
    targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-staging
  name: overpass-ingress
spec:
  rules:
  - host: overpass.dev.bandar-log.dev
    http:
      paths:
        - pathType: Prefix
          path: /
          backend:
            service:
              name: overpass-service
              port:
                number: 8000
  tls: # < placing a host in the TLS config will determine what ends up in the cert's subjectAltNames
  - hosts:
    - overpass.dev.bandar-log.dev
    secretName: overpass-cert